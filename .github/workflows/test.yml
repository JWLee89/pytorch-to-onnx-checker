name: Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_call:

env:
  DOCKER_CONTAINER_NAME: ${USER}_pytorch-to-onnx-checker_github_action

jobs:
  run_tests:
    # For now, we will only add self-hosted
    # Feel free to add other hosts such as [X64, aip]
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
      -
        name: Build docker image
        uses: docker/build-push-action@v3
        with:
          load: true
          context: .
          tags: pt2onnx_checker:latest
          target: check
      -
        name: Run tests
        run: |
          # Start docker container
          # IMPORTANT: Do not use volume mounting when working on local-host
          # as that can potentially create unexpected side-effects where
          # the user creating files inside the docker image is different to
          # the user running the Github actions, resulting in files remaining
          docker run --name ${{ env.DOCKER_CONTAINER_NAME }} \
            -itd \
            -w /project \
            pt2onnx_checker:latest \
            bash
          # Copy current repository into docker
          # Avoid volume mounting especially if working with self-hosted devices
          docker cp ${{ github.workspace }} ${{ env.DOCKER_CONTAINER_NAME }}:/project
          # Run tests
          docker exec ${{ env.DOCKER_CONTAINER_NAME }} \
            bash -e -c "pytest --cov pytorch-to-onnx-checker --cov-report=xml"
      -
        name: Retrieve codecov results
        run: |
          docker cp ${{ env.DOCKER_CONTAINER_NAME }}:/project/coverage.xml .
      -
        name: Stop and cleanup docker container
        run: |
          docker stop ${{ env.DOCKER_CONTAINER_NAME }}
          docker rm ${{ env.DOCKER_CONTAINER_NAME }}
      -
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
